{"version":3,"sources":["Title.jsx","Create.jsx","Li.jsx","Phone.jsx","Test.jsx","State.jsx","App.js","store/reducers.js","store/index.js","index.js"],"names":["Title","className","Create","dispatch","useDispatch","useState","inputValue","setInputValue","TextField","value","id","label","style","width","onChange","e","target","onKeyDown","key","type","addObj","Math","random","name","isSelect","isEdit","Li","state","useSelector","alertValue","list","length","map","item","index","autoFocus","defaultValue","onBlur","ListItem","button","padding","ListItemText","primary","Checkbox","checked","size","color","inputProps","paddingRight","textDecoration","onClick","Phone","props","isPC","document","body","clientWidth","children","Test","State","todos","done","Link","href","App","forEach","reducer","action","filter","obj","push","newObj","editObj","newVal","persistConfig","storage","whitelist","stateReconciler","autoMergeLevel2","myPersistReducer","persistReducer","mainReducers","store","createStore","persistor","persistStore","rootReducer","ReactDOM","render","loading","getElementById"],"mappings":"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","file":"static/js/main.6d95b860.chunk.js","sourcesContent":["import './Title.scss'\r\n\r\nfunction Title() {\r\n  return (\r\n    <div className=\"title\">\r\n      <h1>ANeng</h1>\r\n    </div>\r\n  )\r\n}\r\nexport default Title","import TextField from '@material-ui/core/TextField';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from 'react'\r\nfunction Create() {\r\n  const dispatch = useDispatch();\r\n  // const list = useSelector(state => state.list);\r\n\r\n  // let [focusState, setFocusState] = useState(true);\r\n  let [inputValue, setInputValue] = useState('');\r\n  return (\r\n    <>\r\n      <TextField\r\n        value={inputValue}\r\n        // autoFocus={focusState}\r\n        id=\"standard-basic\"\r\n        label=\"请输入要完成的事项\"\r\n        style={{\r\n          width: '100%'\r\n        }}\r\n        onChange={(e) => {\r\n          setInputValue(e.target.value)\r\n        }}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            if (e.target.value !== '') {\r\n              dispatch({\r\n                type: \"AddTodos\",\r\n                addObj: {\r\n                  id: Math.random() + 1,\r\n                  name: inputValue,\r\n                  isSelect: false,\r\n                  isEdit: false\r\n                }\r\n              })\r\n              setInputValue('')\r\n              // setFocusState(false)\r\n            }\r\n          }\r\n        }}\r\n      /></>\r\n  )\r\n}\r\nexport default Create","import Checkbox from '@material-ui/core/Checkbox';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport \"./Li.scss\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nfunction Li() {\r\n  const state = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  let alertValue = \"\";\r\n\r\n  return (\r\n    <div className=\"li\">\r\n      {/* 数据 */}\r\n      {\r\n        state.list.length>0\r\n        ?\r\n        state.list.map((item, index) => {\r\n          return (\r\n            !item.isEdit ?\r\n              <ListItem\r\n                className=\"liItem\"\r\n                button\r\n                key={item.id}\r\n                style={{\r\n                  padding: 0,\r\n                }}\r\n              >\r\n                <ListItemText primary={\r\n                  <div className=\"dataList\">\r\n                    <div className=\"left\">\r\n                      <Checkbox\r\n                        checked={item.isSelect}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                        style={{\r\n                          padding: '6px 0',\r\n                          paddingRight: '6px'\r\n                        }}\r\n                        onChange={(e) => {\r\n                          dispatch({\r\n                            type: 'SetSelect',\r\n                            id: item.id,\r\n                            state: e.target.checked\r\n                          })\r\n                        }}\r\n                      />\r\n\r\n                      <span\r\n                        style={{\r\n                          textDecoration: item.isSelect ? 'line-through' : 'none'\r\n                        }}\r\n                        onClick={() => {\r\n                          dispatch({\r\n                            type: 'Edit',\r\n                            id: item.id\r\n                          })\r\n                        }}\r\n                      >{item.name}</span>\r\n                    </div>\r\n                    <Cancel\r\n                      size=\"small\"\r\n                      onClick={() => {\r\n                        dispatch({ type: 'DelTodos', id: item.id })\r\n                      }}\r\n                      className=\"cancel\" />\r\n                  </div>\r\n                } />\r\n              </ListItem>\r\n              :\r\n              < TextField\r\n                autoFocus\r\n                key={item.id}\r\n                defaultValue={item.name}\r\n                id=\"standard-basic\"\r\n                onBlur={() => {\r\n                  dispatch({ type: 'Edit' })\r\n                  if (alertValue !== '') {\r\n                    dispatch({ type: 'AlertValue', id: item.id, name: alertValue })\r\n                  }\r\n                }}\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n                onChange={(e) => {\r\n                  if (e.target.value !== '') {\r\n                    alertValue = e.target.value;\r\n                  }\r\n                }}\r\n              />\r\n          )\r\n        })\r\n        :\r\n        <div>\r\n          暂无代办！\r\n        </div>\r\n      }\r\n    </div >\r\n  )\r\n}\r\nexport default Li","import \"./phone.scss\"\r\nfunction Phone(props) {\r\n  let isPC = true;\r\n  if (document.body.clientWidth <= 750) {\r\n    isPC = false;\r\n  }\r\n  return <div className={isPC ? 'pc' : 'phone'}>\r\n    {props.children}\r\n  </div>\r\n}\r\nexport default Phone","import \"./Test.scss\";\r\nfunction Test(props) {\r\n  return (\r\n    <>\r\n      <div style={{\r\n        marginBottom: '20px'\r\n      }} className=\"Test\">\r\n        <div>\r\n          {props.children}\r\n        </div>\r\n        <div>\r\n          {props.val}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default Test;","import Link from '@material-ui/core/Link';\r\nimport './State.scss'\r\nimport { useDispatch } from 'react-redux'\r\nfunction State(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      {\r\n        props.todos !== '' ? <div className=\"state\">\r\n          {\r\n            props.todos !== '' ? <div>{props.todos}<span style={{\r\n              color: \"#777777\"\r\n            }}>项待完成</span></div> : null\r\n          }\r\n          {\r\n            props.done ? <div onClick={() => {\r\n              dispatch({\r\n                type: 'Clear'\r\n              })\r\n            }}>\r\n              <Link href=\"#\">\r\n                Clear {props.done} 已完成事项\r\n              </Link>\r\n            </div> : null\r\n          }\r\n        </div> : null\r\n      }\r\n    </>\r\n  )\r\n}\r\nexport default State","import \"./app.scss\";\r\nimport Title from \"./Title\";\r\nimport Create from \"./Create\";\r\nimport Li from \"./Li\";\r\nimport PhoneBox from \"./Phone\";\r\nimport Test from \"./Test\";\r\nimport State from \"./State\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nexport default function App() {\r\n  const state = useSelector((state) => state);\r\n  let todos = \"\",\r\n    done = \"\";\r\n  state.list.forEach((item) => {\r\n    if (!item.isSelect) {\r\n      todos++;\r\n    } else {\r\n      done++;\r\n    }\r\n    if (todos === \"\") {\r\n      todos = \"0\";\r\n    }\r\n  });\r\n  return (\r\n    <HashRouter>\r\n      <PhoneBox>\r\n        <Title />\r\n        <Create />\r\n        <Li />\r\n        <State className=\"box\" todos={todos} done={done} />\r\n        {/* <Test val=\"jjj\">test</Test> */}\r\n      </PhoneBox>\r\n    </HashRouter>\r\n  );\r\n}\r\n","export default function reducer(\r\n  state = {\r\n    list: [],\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"AddTodos\":\r\n      return { list: [...state.list, action.addObj] };\r\n    case \"DelTodos\":\r\n      return { list: state.list.filter((item) => item.id !== action.id) };\r\n    case \"SetSelect\":\r\n      let obj = [];\r\n      state.list.forEach((item) => {\r\n        if (item.id === action.id) {\r\n          item.isSelect = action.state;\r\n        }\r\n        obj.push(item);\r\n      });\r\n      return { list: obj };\r\n    case \"Clear\":\r\n      let newObj = [];\r\n      state.list.forEach((item) => {\r\n        if (!item.isSelect) {\r\n          newObj.push(item);\r\n        }\r\n      });\r\n      return { list: newObj };\r\n    case \"Edit\":\r\n      let editObj = [];\r\n      state.list.forEach((item) => {\r\n        if (item.id === action.id) {\r\n          item.isEdit = true;\r\n        } else {\r\n          item.isEdit = false;\r\n        }\r\n        editObj.push(item);\r\n      });\r\n      return { list: editObj };\r\n    case \"AlertValue\":\r\n      let newVal = [];\r\n      state.list.forEach((item) => {\r\n        if (item.id === action.id) {\r\n          item.name = action.name;\r\n        }\r\n        newVal.push(item);\r\n      });\r\n      return { list: newVal };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport mainReducers from \"./reducers\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: storage,\r\n  whitelist: [\"list\"],\r\n  stateReconciler: autoMergeLevel2, // 查看 'Merge Process' 部分的具体情况\r\n};\r\n\r\nconst myPersistReducer = persistReducer(persistConfig, mainReducers);\r\nconst store = createStore(myPersistReducer);\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./store/reducers\";\r\n//引入PersistGate标签，和persistor\r\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\r\nimport { persistor } from \"./store\";\r\n\r\nconst store = createStore(rootReducer);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}